{
    "sourceFile": "backend/main.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1727356396847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727356518442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n \r\n class Contact(db.Model):\r\n     id = db.Column(db.Integer, primary_key=True)\r\n-    first_name = db.Column(db.String(80), unique=False, nullable=False)\r\n+    first_name = db.Column(db.String(80),t unique=False, nullable=False)\r\n     last_name = db.Column(db.String(80), unique=False, nullable=False)\r\n     email = db.Column(db.String(120), unique=True, nullable=False)\r\n \r\n     def to_json(self):\r\n"
                },
                {
                    "date": 1727356683080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +0,0 @@\n-from config import db\r\n-\r\n-\r\n-class Contact(db.Model):\r\n-    id = db.Column(db.Integer, primary_key=True)\r\n-    first_name = db.Column(db.String(80),t unique=False, nullable=False)\r\n-    last_name = db.Column(db.String(80), unique=False, nullable=False)\r\n-    email = db.Column(db.String(120), unique=True, nullable=False)\r\n-\r\n-    def to_json(self):\r\n-        return {\r\n-            \"id\": self.id,\r\n-            \"firstName\": self.first_name,\r\n-            \"lastName\": self.last_name,\r\n-            \"email\": self.email,\r\n-        }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727356725140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+from flask import request, jsonify\r\n+from config import app, db\r\n+from models import Contact\r\n+\r\n+\r\n+@app.route(\"/contacts\", methods=[\"GET\"])\r\n+def get_contacts():\r\n+    contacts = Contact.query.all()\r\n+    json_contacts = list(map(lambda x: x.to_json(), contacts))\r\n+    return jsonify({\"contacts\": json_contacts})\r\n+\r\n+\r\n+@app.route(\"/create_contact\", methods=[\"POST\"])\r\n+def create_contact():\r\n+    first_name = request.json.get(\"firstName\")\r\n+    last_name = request.json.get(\"lastName\")\r\n+    email = request.json.get(\"email\")\r\n+\r\n+    if not first_name or not last_name or not email:\r\n+        return (\r\n+            jsonify({\"message\": \"You must include a first name, last name and email\"}),\r\n+            400,\r\n+        )\r\n+\r\n+    new_contact = Contact(first_name=first_name, last_name=last_name, email=email)\r\n+    try:\r\n+        db.session.add(new_contact)\r\n+        db.session.commit()\r\n+    except Exception as e:\r\n+        return jsonify({\"message\": str(e)}), 400\r\n+\r\n+    return jsonify({\"message\": \"User created!\"}), 201\r\n+\r\n+\r\n+@app.route(\"/update_contact/<int:user_id>\", methods=[\"PATCH\"])\r\n+def update_contact(user_id):\r\n+    contact = Contact.query.get(user_id)\r\n+\r\n+    if not contact:\r\n+        return jsonify({\"message\": \"User not found\"}), 404\r\n+\r\n+    data = request.json\r\n+    contact.first_name = data.get(\"firstName\", contact.first_name)\r\n+    contact.last_name = data.get(\"lastName\", contact.last_name)\r\n+    contact.email = data.get(\"email\", contact.email)\r\n+\r\n+    db.session.commit()\r\n+\r\n+    return jsonify({\"message\": \"Usr updated.\"}), 200\r\n+\r\n+\r\n+@app.route(\"/delete_contact/<int:user_id>\", methods=[\"DELETE\"])\r\n+def delete_contact(user_id):\r\n+    contact = Contact.query.get(user_id)\r\n+\r\n+    if not contact:\r\n+        return jsonify({\"message\": \"User not found\"}), 404\r\n+\r\n+    db.session.delete(contact)\r\n+    db.session.commit()\r\n+\r\n+    return jsonify({\"message\": \"User deleted!\"}), 200\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    with app.app_context():\r\n+        db.create_all()\r\n+\r\n+    app.run(debug=True)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727357673805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n @app.route(\"/contacts\", methods=[\"GET\"])\r\n def get_contacts():\r\n     contacts = Contact.query.all()\r\n-    json_contacts = list(map(lambda x: x.to_json(), contacts))\r\n+    json_contacts = list(map(lambda x: x.to-json(), contacts))\r\n     return jsonify({\"contacts\": json_contacts})\r\n \r\n \r\n @app.route(\"/create_contact\", methods=[\"POST\"])\r\n"
                },
                {
                    "date": 1727357683947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n @app.route(\"/contacts\", methods=[\"GET\"])\r\n def get_contacts():\r\n     contacts = Contact.query.all()\r\n-    json_contacts = list(map(lambda x: x.to-json(), contacts))\r\n+    json_contacts = list(map(lambda x: x.to_json(), contacts))\r\n     return jsonify({\"contacts\": json_contacts})\r\n \r\n \r\n @app.route(\"/create_contact\", methods=[\"POST\"])\r\n"
                },
                {
                    "date": 1727357787646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,58 +9,58 @@\n     json_contacts = list(map(lambda x: x.to_json(), contacts))\r\n     return jsonify({\"contacts\": json_contacts})\r\n \r\n \r\n-@app.route(\"/create_contact\", methods=[\"POST\"])\r\n-def create_contact():\r\n-    first_name = request.json.get(\"firstName\")\r\n-    last_name = request.json.get(\"lastName\")\r\n-    email = request.json.get(\"email\")\r\n+# @app.route(\"/create_contact\", methods=[\"POST\"])\r\n+# def create_contact():\r\n+#     first_name = request.json.get(\"firstName\")\r\n+#     last_name = request.json.get(\"lastName\")\r\n+#     email = request.json.get(\"email\")\r\n \r\n-    if not first_name or not last_name or not email:\r\n-        return (\r\n-            jsonify({\"message\": \"You must include a first name, last name and email\"}),\r\n-            400,\r\n-        )\r\n+#     if not first_name or not last_name or not email:\r\n+#         return (\r\n+#             jsonify({\"message\": \"You must include a first name, last name and email\"}),\r\n+#             400,\r\n+#         )\r\n \r\n-    new_contact = Contact(first_name=first_name, last_name=last_name, email=email)\r\n-    try:\r\n-        db.session.add(new_contact)\r\n-        db.session.commit()\r\n-    except Exception as e:\r\n-        return jsonify({\"message\": str(e)}), 400\r\n+#     new_contact = Contact(first_name=first_name, last_name=last_name, email=email)\r\n+#     try:\r\n+#         db.session.add(new_contact)\r\n+#         db.session.commit()\r\n+#     except Exception as e:\r\n+#         return jsonify({\"message\": str(e)}), 400\r\n \r\n-    return jsonify({\"message\": \"User created!\"}), 201\r\n+#     return jsonify({\"message\": \"User created!\"}), 201\r\n \r\n \r\n-@app.route(\"/update_contact/<int:user_id>\", methods=[\"PATCH\"])\r\n-def update_contact(user_id):\r\n-    contact = Contact.query.get(user_id)\r\n+# @app.route(\"/update_contact/<int:user_id>\", methods=[\"PATCH\"])\r\n+# def update_contact(user_id):\r\n+#     contact = Contact.query.get(user_id)\r\n \r\n-    if not contact:\r\n-        return jsonify({\"message\": \"User not found\"}), 404\r\n+#     if not contact:\r\n+#         return jsonify({\"message\": \"User not found\"}), 404\r\n \r\n-    data = request.json\r\n-    contact.first_name = data.get(\"firstName\", contact.first_name)\r\n-    contact.last_name = data.get(\"lastName\", contact.last_name)\r\n-    contact.email = data.get(\"email\", contact.email)\r\n+#     data = request.json\r\n+#     contact.first_name = data.get(\"firstName\", contact.first_name)\r\n+#     contact.last_name = data.get(\"lastName\", contact.last_name)\r\n+#     contact.email = data.get(\"email\", contact.email)\r\n \r\n-    db.session.commit()\r\n+#     db.session.commit()\r\n \r\n-    return jsonify({\"message\": \"Usr updated.\"}), 200\r\n+#     return jsonify({\"message\": \"Usr updated.\"}), 200\r\n \r\n \r\n-@app.route(\"/delete_contact/<int:user_id>\", methods=[\"DELETE\"])\r\n-def delete_contact(user_id):\r\n-    contact = Contact.query.get(user_id)\r\n+# @app.route(\"/delete_contact/<int:user_id>\", methods=[\"DELETE\"])\r\n+# def delete_contact(user_id):\r\n+#     contact = Contact.query.get(user_id)\r\n \r\n-    if not contact:\r\n-        return jsonify({\"message\": \"User not found\"}), 404\r\n+#     if not contact:\r\n+#         return jsonify({\"message\": \"User not found\"}), 404\r\n \r\n-    db.session.delete(contact)\r\n-    db.session.commit()\r\n+#     db.session.delete(contact)\r\n+#     db.session.commit()\r\n \r\n-    return jsonify({\"message\": \"User deleted!\"}), 200\r\n+#     return jsonify({\"message\": \"User deleted!\"}), 200\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     with app.app_context():\r\n"
                },
                {
                    "date": 1727357996047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,58 +9,58 @@\n     json_contacts = list(map(lambda x: x.to_json(), contacts))\r\n     return jsonify({\"contacts\": json_contacts})\r\n \r\n \r\n-# @app.route(\"/create_contact\", methods=[\"POST\"])\r\n-# def create_contact():\r\n-#     first_name = request.json.get(\"firstName\")\r\n-#     last_name = request.json.get(\"lastName\")\r\n-#     email = request.json.get(\"email\")\r\n+@app.route(\"/create_contact\", methods=[\"POST\"])\r\n+def create_contact():\r\n+    first_name = request.json.get(\"firstName\")\r\n+    last_name = request.json.get(\"lastName\")\r\n+    email = request.json.get(\"email\")\r\n \r\n-#     if not first_name or not last_name or not email:\r\n-#         return (\r\n-#             jsonify({\"message\": \"You must include a first name, last name and email\"}),\r\n-#             400,\r\n-#         )\r\n+    if not first_name or not last_name or not email:\r\n+        return (\r\n+            jsonify({\"message\": \"You must include a first name, last name and email\"}),\r\n+            400,\r\n+        )\r\n \r\n-#     new_contact = Contact(first_name=first_name, last_name=last_name, email=email)\r\n-#     try:\r\n-#         db.session.add(new_contact)\r\n-#         db.session.commit()\r\n-#     except Exception as e:\r\n-#         return jsonify({\"message\": str(e)}), 400\r\n+    new_contact = Contact(first_name=first_name, last_name=last_name, email=email)\r\n+    try:\r\n+        db.session.add(new_contact)\r\n+        db.session.commit()\r\n+    except Exception as e:\r\n+        return jsonify({\"message\": str(e)}), 400\r\n \r\n-#     return jsonify({\"message\": \"User created!\"}), 201\r\n+    return jsonify({\"message\": \"User created!\"}), 201\r\n \r\n \r\n-# @app.route(\"/update_contact/<int:user_id>\", methods=[\"PATCH\"])\r\n-# def update_contact(user_id):\r\n-#     contact = Contact.query.get(user_id)\r\n+@app.route(\"/update_contact/<int:user_id>\", methods=[\"PATCH\"])\r\n+def update_contact(user_id):\r\n+    contact = Contact.query.get(user_id)\r\n \r\n-#     if not contact:\r\n-#         return jsonify({\"message\": \"User not found\"}), 404\r\n+    if not contact:\r\n+        return jsonify({\"message\": \"User not found\"}), 404\r\n \r\n-#     data = request.json\r\n-#     contact.first_name = data.get(\"firstName\", contact.first_name)\r\n-#     contact.last_name = data.get(\"lastName\", contact.last_name)\r\n-#     contact.email = data.get(\"email\", contact.email)\r\n+    data = request.json\r\n+    contact.first_name = data.get(\"firstName\", contact.first_name)\r\n+    contact.last_name = data.get(\"lastName\", contact.last_name)\r\n+    contact.email = data.get(\"email\", contact.email)\r\n \r\n-#     db.session.commit()\r\n+    db.session.commit()\r\n \r\n-#     return jsonify({\"message\": \"Usr updated.\"}), 200\r\n+    return jsonify({\"message\": \"Usr updated.\"}), 200\r\n \r\n \r\n-# @app.route(\"/delete_contact/<int:user_id>\", methods=[\"DELETE\"])\r\n-# def delete_contact(user_id):\r\n-#     contact = Contact.query.get(user_id)\r\n+@app.route(\"/delete_contact/<int:user_id>\", methods=[\"DELETE\"])\r\n+def delete_contact(user_id):\r\n+    contact = Contact.query.get(user_id)\r\n \r\n-#     if not contact:\r\n-#         return jsonify({\"message\": \"User not found\"}), 404\r\n+    if not contact:\r\n+        return jsonify({\"message\": \"User not found\"}), 404\r\n \r\n-#     db.session.delete(contact)\r\n-#     db.session.commit()\r\n+    db.session.delete(contact)\r\n+    db.session.commit()\r\n \r\n-#     return jsonify({\"message\": \"User deleted!\"}), 200\r\n+    return jsonify({\"message\": \"User deleted!\"}), 200\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     with app.app_context():\r\n"
                }
            ],
            "date": 1727356396847,
            "name": "Commit-0",
            "content": "from config import db\r\n\r\n\r\nclass Contact(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    first_name = db.Column(db.String(80), unique=False, nullable=False)\r\n    last_name = db.Column(db.String(80), unique=False, nullable=False)\r\n    email = db.Column(db.String(120), unique=True, nullable=False)\r\n\r\n    def to_json(self):\r\n        return {\r\n            \"id\": self.id,\r\n            \"firstName\": self.first_name,\r\n            \"lastName\": self.last_name,\r\n            \"email\": self.email,\r\n        }"
        }
    ]
}